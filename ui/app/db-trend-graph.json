{
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": {
                    "type": "datasource",
                    "uid": "grafana"
                },
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "target": {
                    "limit": 100,
                    "matchAny": false,
                    "tags": [],
                    "type": "dashboard"
                },
                "type": "dashboard"
            }
        ]
    },
    "description": "https://db-engines.com/en/ranking_trend",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": null,
    "links": [
        {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": false,
            "keepTime": false,
            "tags": [
                "DBRANK"
            ],
            "targetBlank": false,
            "title": "DBRANK",
            "tooltip": "",
            "type": "dashboards",
            "url": ""
        }
    ],
    "liveNow": false,
    "panels": [
        {
            "collapsed": true,
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 0
            },
            "id": 55,
            "panels": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "ds-prometheus"
                    },
                    "gridPos": {
                        "h": 29,
                        "w": 24,
                        "x": 0,
                        "y": 1
                    },
                    "id": 54,
                    "options": {
                        "baidu": {
                            "callback": "bmapReady",
                            "key": ""
                        },
                        "editor": {
                            "format": "auto",
                            "height": 600
                        },
                        "gaode": {
                            "key": "",
                            "plugin": "AMap.Scale,AMap.ToolBar"
                        },
                        "getOption": "// use%, love%, want%, lps\nvar rawData = [[21.2, 60.8, 11.5, 21.6, 2017, \"pgsql\"], [32.9, 62, 11.4, 24, 2018, \"pgsql\"], [34.3, 69.6, 13.6, 39.2, 2019, \"pgsql\"], [36.1, 63.9, 15.6, 27.8, 2020, \"pgsql\"], [40.42, 70.4, 17.99, 40.8, 2021, \"pgsql\"], [43.59, 72.08, 19.05, 44.16, 2022, \"pgsql\"], [45.55, 71.32, 42.3, 42.64, 2023, \"pgsql\"], [44.3, 49.6, 8.5, -0.8, 2017, \"mysql\"], [58.7, 48.7, 7.5, -2.6, 2018, \"mysql\"], [54, 53.9, 8.2, 7.8, 2019, \"mysql\"], [55.7, 47.1, 9, -5.8, 2020, \"mysql\"], [50.18, 51.35, 9.76, 2.70, 2021, \"mysql\"], [46.85, 51.17, 7.99, 2.34, 2022, \"mysql\"], [41.09, 50.8, 24.4, 1.6, 2023, \"mysql\"], [21.2, 47.2, 7.2, -5.6, 2017, \"sqlite\"], [19.7, 48.1, 3.3, -3.8, 2018, \"sqlite\"], [31.6, 55.6, 7.2, 11.2, 2019, \"sqlite\"], [31.2, 49.4, 7.7, -1.2, 2020, \"sqlite\"], [32.18, 54.43, 7.74, 8.86, 2021, \"sqlite\"], [32.01, 57.51, 8.18, 15.02, 2022, \"sqlite\"], [30.90, 59.0, 23.0, 18.0, 2023, \"sqlite\"], [30.8, 54.2, 4.6, 8.4, 2017, \"mssql\"], [41.2, 51.6, 4.2, 3.2, 2018, \"mssql\"], [32.8, 57.5, 3.3, 15.0, 2019, \"mssql\"], [33, 50.9, 3.7, 1.8, 2020, \"mssql\"], [26.87, 54.08, 3.11, 8.16, 2021, \"mssql\"], [26.87, 54.95, 2.62, 9.90, 2022, \"mssql\"], [25.45, 54.7, 15.5, 9.4, 2023, \"mssql\"], [16.8, 55, 20.8, 10, 2017, \"mongo\"], [25.9, 55.1, 18.6, 10.2, 2018, \"mongo\"], [25.5, 59.5, 17.8, 19.0, 2019, \"mongo\"], [26.4, 56, 19.4, 12, 2020, \"mongo\"], [27.7, 60.28, 17.86, 20.56, 2021, \"mongo\"], [28.3, 60.51, 17.26, 21.02, 2022, \"mongo\"], [25.52, 55.2, 22.7, 10.4, 2023, \"mongo\"], [11.2, 64.8, 10.6, 29.6, 2017, \"redis\"], [18, 64.5, 9.7, 29.0, 2018, \"redis\"], [18.6, 71.3, 10.7, 42.6, 2019, \"redis\"], [18.3, 66.5, 12.2, 33.0, 2020, \"redis\"], [20.69, 70.71, 12.58, 41.42, 2021, \"redis\"], [22.13, 71.04, 14.3, 42.08, 2022, \"redis\"], [20.41, 69.9, 22.5, 39.8, 2023, \"redis\"], [16.5, 36.9, 3.8, -26.2, 2017, \"oracle\"], [11.1, 36.9, 2.3, -26.2, 2018, \"oracle\"], [16.5, 38.2, 3.4, -23.6, 2019, \"oracle\"], [16.5, 33.2, 4.2, -33.6, 2020, \"oracle\"], [12.61, 35.18, 2.8, -29.64, 2021, \"oracle\"], [11.49, 35.33, 2.24, -29.34, 2022, \"oracle\"], [9.80, 36.0, 4.9, -28.0, 2023, \"oracle\"]]\nvar databaseList = ['pgsql', 'mysql', 'sqlite', 'mssql', 'mongo', 'redis', 'oracle']\nvar colorList = ['#4F668A', '#de8e1e', '#83BCE4', '#D6D9D2', '#679443', '#a32f2e', '#f11f1b'];\nvar yearList = [2017, 2018, 2019, 2020, 2021, 2022, 2023]\nvar schema = [\n  { name: '\u4f7f\u7528\u7387', index: 0, text: '\u4f7f\u7528\u7387', unit: '%' },\n  { name: '\u559c\u7231\u5ea6', index: 1, text: '\u559c\u7231\u5ea6', unit: '%' },\n  { name: '\u6e34\u6c42\u5ea6', index: 2, text: '\u6e34\u6c42\u5ea6', unit: '%' },\n  { name: '\u51c0\u7231\u503c', index: 3, text: '\u51c0\u7231\u503c', unit: '%' },\n  { name: '\u5e74\u4efd', index: 4, text: '\u5e74\u4efd', unit: '' },\n  { name: '\u6570\u636e\u5e93', index: 5, text: '\u6570\u636e\u5e93', unit: '' },\n];\nvar nameMapping = {\n  \"pgsql\": \"PostgreSQL\",\n  \"mysql\": \"MySQL\",\n  \"sqlite\": \"SQLite\",\n  \"mssql\": \"SQL Server\",\n  \"mongo\": \"MongoDB\",\n  \"redis\": \"Redis\",\n  \"oracle\": \"Oracle\",\n}\n\n\n// database chart movement lines\nvar routes = {}\nfor (var i = 0; i < databaseList.length; i++) {\n  var dbname = databaseList[i]\n  var route = []\n  // filter rawData x/y with dbname\n  for (var j = 0; j < rawData.length; j++) {\n    if (rawData[j][5] === dbname) {\n      route.push([rawData[j][0], rawData[j][3]])   // use% as x , love% as y\n    }\n  }\n  routes[dbname] = {\n    symbolSize: 12,\n    symbol: 'rect',\n    showAllSymbol: true,\n    type: 'line',\n    lineStyle: {\n      color: colorList[i] + '66',\n      width: 1,\n      type: 'dashed'\n    },\n    itemStyle: {},\n    showSymbol: true,\n    symbolSize: 2,\n    data: route\n  }\n}\n\n// yearly data series\nvar series = []\nfor (var i = 0; i < yearList.length; i++) {\n  var year = yearList[i]\n  var yearData = []\n  // filter rawData x/y with dbname\n  for (var j = 0; j < rawData.length; j++) {\n    if (rawData[j][4] === year) {\n      yearData.push([\n        // x: use% , y: love% , z: want% , value: net love%\n        rawData[j][0], rawData[j][3], rawData[j][2], rawData[j][1], rawData[j][4], rawData[j][5]\n      ])\n    }\n  }\n  series.push([routes['pgsql'], routes['mysql'], routes['sqlite'], routes['mssql'], routes['mongo'], routes['redis'], routes['oracle'], {\n    name: yearList[n],\n    type: 'scatter',\n    colorBy: 'data',\n    label: {\n      show: true,\n      fontSize: 10,\n      formatter: function (param) {\n        return nameMapping[param.data[5]];\n      },\n    },\n    itemStyle: {\n      borderWidth: 0,\n      opacity: 0.8\n    },\n    data: yearData,\n    symbolSize: function (val) {\n      return 8 + Math.sqrt(val[0] * Math.abs(val[3])) * 2;\n    }\n  }])\n}\n\n\noption = {\n  baseOption: {\n    color: colorList,\n    timeline: { // \u65f6\u95f4\u8f74\n      axisType: 'category',\n      orient: 'vertical',\n      autoPlay: true,\n      inverse: true,\n      playInterval: 1200,\n      left: null,\n      right: 0,\n      top: 100,\n      bottom: 100,\n      width: 50,\n      height: null,\n      symbol: 'none',\n      checkpointStyle: {\n        borderWidth: 5\n      },\n      controlStyle: {\n        showNextBtn: true, showPrevBtn: true\n      },\n      data: []\n    },\n    title: [{\n      text: yearList[0], textAlign: 'center', bottom: '10%', right: '0%', textStyle: {\n        fontSize: 100\n      }\n    }, {\n      text: 'StackOverflow 2017-2023 \u6570\u636e\u5e93\u6d41\u884c\u5ea6/\u559c\u7231\u5ea6\u8d8b\u52bf',\n      left: 'center',\n      top: 10,\n      textStyle: { fontWeight: 'normal', fontSize: 20 }\n    }],\n    tooltip: {\n      padding: 5, borderWidth: 1, formatter: function (obj) {\n        var v = obj.value;\n        return nameMapping[v[5]] + '<br>' + '\u4f7f\u7528\u7387' + '\uff1a' + v[0] + '%<br>' + '\u559c\u7231\u7387' + '\uff1a' + v[1] + '%<br>' + '\u6e34\u6c42\u5ea6' + '\uff1a' + v[2] + '%<br>' + '\u51c0\u559c\u7231\u6307\u6570' + '\uff1a' + v[3] + '%';\n      }\n    },\n    grid: {\n      top: 100, containLabel: true, left: 30, right: '110'\n    },\n    xAxis: {\n      name: '\u6d41\u884c\u5ea6', max: 60, min: 0, nameGap: 5, nameTextStyle: {\n        fontSize: 18\n      }, splitLine: {\n        show: true\n      }, minorSplitLine: {\n        show: true\n      }, axisLine: {\n        show: true\n      }, axisLabel: {\n        formatter: '{value} %'\n      }\n    },\n    yAxis: {\n      type: 'value', name: '\u51c0\u559c\u7231\u5ea6', max: 60, min: -40, nameGap: 5, nameTextStyle: {\n        fontSize: 18\n      }, minorSplitLine: {\n        show: true\n      }, splitLine: {\n        interval: 5,\n        show: true\n      }, axisLabel: {\n        formatter: '{value} %'\n      }\n    },\n    series: series[0],\n    animationDurationUpdate: 1000,\n    animationEasingUpdate: 'quinticInOut'\n  }, options: []\n};\n\nfor (var n = 0; n < yearList.length; n++) {\n  option.baseOption.timeline.data.push(yearList[n]);\n  option.options.push({\n    title: { show: true, text: yearList[n] + '' },\n    series: series[n]\n  });\n}\n\n\n// var echartInstance = echarts.init(document.getElementById('main'));\nreturn option",
                        "google": {
                            "callback": "gmapReady",
                            "key": ""
                        },
                        "map": "none",
                        "renderer": "canvas",
                        "themeEditor": {
                            "config": "{}",
                            "height": 400,
                            "name": "default"
                        }
                    },
                    "type": "volkovlabs-echarts-panel"
                }
            ],
            "title": "\u6d41\u884c\u5ea6 - \u559c\u7231\u5ea6 \u53d8\u5316\u8d8b\u52bf\u56fe",
            "type": "row"
        },
        {
            "collapsed": false,
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 1
            },
            "id": 57,
            "panels": [],
            "title": "Used / Net Love Graph for MySQL & PostgreSQL",
            "type": "row"
        },
        {
            "datasource": {
                "type": "prometheus",
                "uid": "ds-prometheus"
            },
            "gridPos": {
                "h": 29,
                "w": 24,
                "x": 0,
                "y": 2
            },
            "id": 56,
            "options": {
                "baidu": {
                    "callback": "bmapReady",
                    "key": ""
                },
                "editor": {
                    "format": "auto",
                    "height": 600
                },
                "gaode": {
                    "key": "",
                    "plugin": "AMap.Scale,AMap.ToolBar"
                },
                "getOption": "// use%, love%, want%, lps\nvar rawData = [[32.9, 62, 11.4, 24, 2018, \"pgsql\"], [34.3, 69.6, 13.6, 39.2, 2019, \"pgsql\"], [36.1, 63.9, 15.6, 27.8, 2020, \"pgsql\"], [40.42, 70.4, 17.99, 40.8, 2021, \"pgsql\"], [43.59, 72.08, 19.05, 44.16, 2022, \"pgsql\"], [45.55, 71.32, 42.3, 42.64, 2023, \"pgsql\"], [58.7, 48.7, 7.5, -2.6, 2018, \"mysql\"], [54, 53.9, 8.2, 7.8, 2019, \"mysql\"], [55.7, 47.1, 9, -5.8, 2020, \"mysql\"], [50.18, 51.35, 9.76, 2.70, 2021, \"mysql\"], [46.85, 51.17, 7.99, 2.34, 2022, \"mysql\"], [41.09, 50.8, 24.4, 1.6, 2023, \"mysql\"]]\nvar databaseList = ['pgsql', 'mysql', 'sqlite', 'mssql', 'mongo', 'redis', 'oracle']\nvar colorList = ['#4F668A', '#de8e1e', '#83BCE4', '#D6D9D2', '#679443', '#a32f2e', '#f11f1b'];\nvar yearList = [2018, 2019, 2020, 2021, 2022, 2023]\nvar schema = [\n  { name: '\u4f7f\u7528\u7387', index: 0, text: '\u4f7f\u7528\u7387', unit: '%' },\n  { name: '\u559c\u7231\u5ea6', index: 1, text: '\u559c\u7231\u5ea6', unit: '%' },\n  { name: '\u6e34\u6c42\u5ea6', index: 2, text: '\u6e34\u6c42\u5ea6', unit: '%' },\n  { name: '\u51c0\u7231\u503c', index: 3, text: '\u51c0\u7231\u503c', unit: '%' },\n  { name: '\u5e74\u4efd', index: 4, text: '\u5e74\u4efd', unit: '' },\n  { name: '\u6570\u636e\u5e93', index: 5, text: '\u6570\u636e\u5e93', unit: '' },\n];\nvar nameMapping = {\n  \"pgsql\": \"PostgreSQL\",\n  \"mysql\": \"MySQL\",\n  \"sqlite\": \"SQLite\",\n  \"mssql\": \"SQL Server\",\n  \"mongo\": \"MongoDB\",\n  \"redis\": \"Redis\",\n  \"oracle\": \"Oracle\",\n}\n\n\n// database chart movement lines\nvar routes = {}\nfor (var i = 0; i < databaseList.length; i++) {\n  var dbname = databaseList[i]\n  var route = []\n  // filter rawData x/y with dbname\n  for (var j = 0; j < rawData.length; j++) {\n    if (rawData[j][5] === dbname) {\n      route.push([rawData[j][0], rawData[j][3]])   // use% as x , love% as y\n    }\n  }\n  routes[dbname] = {\n    symbolSize: 12,\n    symbol: 'rect',\n    showAllSymbol: true,\n    type: 'line',\n    lineStyle: {\n      color: colorList[i] + '66',\n      width: 1,\n      type: 'dashed'\n    },\n    itemStyle: {},\n    showSymbol: true,\n    symbolSize: 2,\n    data: route\n  }\n}\n\n// yearly data series\nvar series = []\nfor (var i = 0; i < yearList.length; i++) {\n  var year = yearList[i]\n  var yearData = []\n  // filter rawData x/y with dbname\n  for (var j = 0; j < rawData.length; j++) {\n    if (rawData[j][4] === year) {\n      yearData.push([\n        // x: use% , y: love% , z: want% , value: net love%\n        rawData[j][0], rawData[j][3], rawData[j][2], rawData[j][1], rawData[j][4], rawData[j][5]\n      ])\n    }\n  }\n  series.push([routes['pgsql'], routes['mysql'], {\n    name: yearList[n],\n    type: 'scatter',\n    colorBy: 'data',\n    label: {\n      show: true,\n      fontSize: 10,\n      formatter: function (param) {\n        return nameMapping[param.data[5]];\n      },\n    },\n    itemStyle: {\n      borderWidth: 0,\n      opacity: 0.8\n    },\n    data: yearData,\n    symbolSize: function (val) {\n      return 8 + Math.sqrt(val[0] * Math.abs(val[3])) * 2;\n    }\n  }])\n}\n\n\noption = {\n  baseOption: {\n    color: colorList,\n    timeline: { // \u65f6\u95f4\u8f74\n      axisType: 'category',\n      orient: 'vertical',\n      autoPlay: true,\n      inverse: true,\n      playInterval: 1200,\n      left: null,\n      right: 0,\n      top: 100,\n      bottom: 100,\n      width: 50,\n      height: null,\n      symbol: 'none',\n      checkpointStyle: {\n        borderWidth: 5\n      },\n      controlStyle: {\n        showNextBtn: true, showPrevBtn: true\n      },\n      data: []\n    },\n    tooltip: {\n      padding: 5, borderWidth: 1, formatter: function (obj) {\n        var v = obj.value;\n        return nameMapping[v[5]] + '<br>' + '\u4f7f\u7528\u7387' + '\uff1a' + v[0] + '%<br>' + '\u559c\u7231\u7387' + '\uff1a' + v[1] + '%<br>' + '\u6e34\u6c42\u5ea6' + '\uff1a' + v[2] + '%<br>' + '\u51c0\u559c\u7231\u6307\u6570' + '\uff1a' + v[3] + '%';\n      }\n    },\n    grid: {\n      top: 50, containLabel: true, left: 30, right: 150\n    },\n    xAxis: {\n      name: '\u6d41\u884c\u5ea6', max: 70, min: 20, nameGap: 5, nameTextStyle: {\n        fontSize: 18\n      }, splitLine: {\n        show: true\n      }, minorSplitLine: {\n        show: true\n      }, axisLine: {\n        show: true\n      }, axisLabel: {\n        formatter: '{value} %'\n      }\n    },\n    yAxis: {\n      type: 'value', name: '\u51c0\u559c\u7231\u5ea6', max: 60, min: -20, nameGap: 5, nameTextStyle: {\n        fontSize: 18\n      }, minorSplitLine: {\n        show: true\n      }, splitLine: {\n        interval: 5,\n        show: true\n      }, axisLabel: {\n        formatter: '{value} %'\n      }\n    },\n    series: series[0],\n    animationDurationUpdate: 1000,\n    animationEasingUpdate: 'quinticInOut'\n  }, options: []\n};\n\nfor (var n = 0; n < yearList.length; n++) {\n  option.baseOption.timeline.data.push(yearList[n]);\n  option.options.push({\n    title: { show: true, text: yearList[n] + '' },\n    series: series[n]\n  });\n}\n\n\n// var echartInstance = echarts.init(document.getElementById('main'));\nreturn option",
                "google": {
                    "callback": "gmapReady",
                    "key": ""
                },
                "map": "none",
                "renderer": "canvas",
                "themeEditor": {
                    "config": "{}",
                    "height": 400,
                    "name": "default"
                }
            },
            "type": "volkovlabs-echarts-panel"
        }
    ],
    "refresh": "",
    "schemaVersion": 38,
    "style": "dark",
    "tags": [
        "APP",
        "DBRANK"
    ],
    "templating": {
        "list": [
            {
                "description": "",
                "hide": 2,
                "name": "lo",
                "query": "2020-01-01",
                "skipUrlSync": false,
                "type": "constant"
            }
        ]
    },
    "time": {
        "from": "2016-12-31T16:00:00.000Z",
        "to": "2022-05-31T16:00:00.000Z"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Database Trending Graph",
    "uid": "db-trend-graph",
    "version": 1,
    "weekStart": "",
    "author": "Vonng (rh@vonng.com)"
}